name: Deploy

on:
  push:
    branches: ["main"]

concurrency:
  group: deploy-main
  cancel-in-progress: true

jobs:
  check_backend:
    name: Check Backend
    runs-on: ubuntu-latest
    outputs:
      run_jobs: ${{ steps.set_output.outputs.run_jobs }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 10

      - name: Check if new build is needed
        id: set_output
        run: bash ignore-build.bash @producktivity/server

  backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: [check_backend]
    if: needs.check_backend.outputs.run_jobs == 'true'

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: actions/checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Setup node with cache
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Write env
        run: node tools/scripts/writeEnv.js

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/producktivity
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/producktivity

      - name: Deploy Database Migrations
        run: pnpm prisma migrate deploy

  check_frontend:
    name: Check Frontend
    runs-on: ubuntu-latest
    needs: [backend]
    if: always() && (needs.backend.result == 'success' || needs.backend.result == 'skipped')
    outputs:
      run_jobs: ${{ steps.set_output.outputs.run_jobs }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 10

      - name: Check if new build is needed
        id: set_output
        run: bash ignore-build.bash @producktivity/client

  frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: [check_frontend]
    if: always() && needs.check_frontend.outputs.run_jobs == 'true'

    permissions:
      contents: read
      deployments: write

    env:
      NEXT_PUBLIC_GRAPHQL_ENDPOINT: ${{ secrets.NEXT_PUBLIC_GRAPHQL_ENDPOINT }}

    steps:
      - name: actions/checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Setup node with cache
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and Export
        run: pnpm turbo run --filter="@producktivity/client" export

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          projectName: producktivity
          directory: apps/client/out
